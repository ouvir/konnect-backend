plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.konnect'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

/* ──────────────── Spring AI BOM 추가 ──────────────── */
/* 1) Milestone 저장소 추가 */
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }   // Spring AI 1.0.0-M6 배포 위치
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:1.0.0-M6"   // Spring AI 전체 버전 일괄 관리
    }
}

dependencies {
    /* ──────────────── Spring Boot & JPA ──────────────── */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    /* ──────────────── QueryDSL ──────────────── */
    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    /* ──────────────── JPA 및 Annotation API ──────────────── */
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    /* ──────────────── DB / Validator ──────────────── */
    runtimeOnly  'com.mysql:mysql-connector-j'
    implementation 'org.hibernate.validator:hibernate-validator'

    /* ──────────────── Lombok ──────────────── */
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    /* ──────────────── Swagger (SpringDoc) ──────────────── */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    /* ──────────────── 환경 변수 ──────────────── */
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'

    /* ──────────────── JWT ──────────────── */
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.3'

    /* ──────────────── Spring AI + OpenAI ──────────────── */
    implementation "org.springframework.ai:spring-ai-openai-spring-boot-starter"

    /* ──────────────── 테스트 ──────────────── */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    /* ──────────────── (선택) MyBatis 사용 시 ──────────────── */
    // implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    // testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
}

test {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

bootJar {
    mainClass = 'com.konnect.KonnectApplication'
}


